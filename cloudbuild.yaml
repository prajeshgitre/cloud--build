steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'asia-south1-docker.pkg.dev/infra-samruddh-bharat-poc-01/my-app-01/my-app-1:latest'
      - '.'

  # Step 2: Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'asia-south1-docker.pkg.dev/infra-samruddh-bharat-poc-01/my-app-01/my-app-1:latest'

  # Step 3: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'my-app-1'
      - '--image'
      - 'asia-south1-docker.pkg.dev/infra-samruddh-bharat-poc-01/my-app-01/my-app-1:latest'
      - '--platform'
      - 'managed'
      - '--region'
      - 'asia-south1'
      - '--allow-unauthenticated'

  # Step 4: Check the deployed service status
  - name: 'curlimages/curl'  # Use curl image to make HTTP requests
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        # Send a request to the Cloud Run service and capture the HTTP status code
        response=$(curl -o /dev/null -s -w "%{http_code}\n" https://dev-gf22ekzyxq-el.a.run.app)

        # Check the status code and take action
        if [ "$response" -eq 200 ]; then
          echo "Deployment successful! Service is healthy."
        elif [ "$response" -eq 500 ]; then
          echo "Deployment failed with status 500! Rolling back..."
          # Add your rollback command here, for example:
          # gcloud deploy releases rollback my-app-1-previous-release --region=asia-south1
        else
          echo "Deployment failed with status $response! Exiting."
          exit 1
        fi

images:
  - 'asia-south1-docker.pkg.dev/infra-samruddh-bharat-poc-01/my-app-01/my-app-1:latest'

logsBucket: 'gs://cloud-build-02'
